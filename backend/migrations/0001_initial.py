# Generated by Django 3.2.9 on 2022-05-11 06:16

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DbShift',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('shiftnum', models.IntegerField()),
                ('time_date', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'db_shift',
            },
        ),
        migrations.CreateModel(
            name='DbTubediameter',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('diameter', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'db_tubediameter',
            },
        ),
        migrations.CreateModel(
            name='DbUniqueStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storageref', models.IntegerField(unique=True)),
                ('storage_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'db_unique_storage',
            },
        ),
        migrations.CreateModel(
            name='DbUniqueWorkunits',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('unit_name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'db_unique_workunits',
            },
        ),
        migrations.CreateModel(
            name='DbWorkerPost',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('post_name', models.CharField(max_length=100)),
                ('salary', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'db_worker_post',
            },
        ),
        migrations.CreateModel(
            name='DbWorkunits',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('unit_name', models.CharField(max_length=255, unique=True)),
                ('unit_plan', models.IntegerField(blank=True, default=200)),
                ('online_accessible', models.BooleanField()),
                ('unit_ref', models.IntegerField(blank=True, null=True, unique=True)),
                ('unitref', models.ForeignKey(blank=True, db_column='unitref', null=True, on_delete=django.db.models.deletion.RESTRICT, to='backend.dbuniqueworkunits')),
            ],
            options={
                'db_table': 'db_workunits',
            },
        ),
        migrations.CreateModel(
            name='DbWorker',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=200)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='backend.dbworkerpost')),
            ],
            options={
                'db_table': 'db_worker',
            },
        ),
        migrations.CreateModel(
            name='DbTubetechoperations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('opresult', models.IntegerField(blank=True, null=True)),
                ('optime', models.DateTimeField()),
                ('unit_regime', models.CharField(max_length=255)),
                ('diameterref', models.ForeignKey(blank=True, db_column='diameterref', null=True, on_delete=django.db.models.deletion.RESTRICT, to='backend.dbtubediameter')),
                ('shiftref', models.ForeignKey(blank=True, db_column='shiftref', null=True, on_delete=django.db.models.deletion.RESTRICT, to='backend.dbshift')),
                ('unitref', models.ForeignKey(blank=True, db_column='unitref', null=True, on_delete=django.db.models.deletion.RESTRICT, to='backend.dbworkunits', to_field='unit_ref')),
                ('workerref', models.ForeignKey(blank=True, db_column='workerref', null=True, on_delete=django.db.models.deletion.RESTRICT, to='backend.dbworker')),
            ],
            options={
                'db_table': 'db_tubetechoperations',
            },
        ),
        migrations.CreateModel(
            name='DbTempdowntime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_cause', models.CharField(max_length=255)),
                ('time_of_stoppage', models.DateTimeField(default=datetime.datetime.now)),
                ('time_of_resume', models.DateTimeField(default=datetime.datetime.now)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='backend.dbworkunits', to_field='unit_ref')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='backend.dbworker')),
            ],
            options={
                'db_table': 'db_tempdowntime',
            },
        ),
        migrations.CreateModel(
            name='DbStorage',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('storage_time', models.DateTimeField()),
                ('status', models.IntegerField(default=0)),
                ('storage_ref', models.ForeignKey(db_column='storage_ref', null=True, on_delete=django.db.models.deletion.RESTRICT, to='backend.dbuniquestorage', to_field='storageref')),
            ],
            options={
                'db_table': 'db_storage',
            },
        ),
        migrations.CreateModel(
            name='DbProps',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('prop_text', models.CharField(max_length=255)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='backend.dbworkunits')),
            ],
            options={
                'db_table': 'db_props',
            },
        ),
    ]
